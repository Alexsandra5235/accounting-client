<?php

namespace App\Enum;

use App\Models\Action;
use App\Services\Api\ApiService;
use Illuminate\Http\Client\ConnectionException;

enum ActionsEnum: string
{
    case ADD = 'add';
    case EDIT = 'edit';
    case DELETE = 'delete';

    public function message(): string
    {
        return match ($this) {
            self::ADD => 'Новая запись',
            self::EDIT => 'Обновление записи',
            self::DELETE => 'Удаление записи',
        };
    }

    public function fullMessage(int $log_id = null, int $user_id = null): string
    {
        return match ($this) {
            self::ADD => $this->getMessageAdd($log_id, $user_id),
            self::EDIT => $this->getMessageUpdate($log_id, $user_id),
            self::DELETE => $this->getMessageDelete($user_id),
        };
    }

    public function getMessageAdd(int $log_id = null, int $user_id = null): string
    {
        if ($log_id === null) {
            if ($user_id === null) {
                return 'В систему учета была добавлена новая запись. В настоящий момент она удалена, просмотр данных не возможен. Сотрудник, выполнивший данной действие, вероятнее всего не работает в данный момент на предприятии.';
            } else {
                return 'В систему учета была добавлена новая запись. В настоящий момент она удалена, просмотр данных не возможен. Для получения информации о сотруднике, выполнившим операцию, перейдите по ссылке ниже.';
            }
        } else {
            if ($user_id === null) {
                return 'В систему учета была добавлена новая запись. Для просмотра данных добавленной записи необходимо перейти по ссылке ниже. Сотрудник, выполнивший данной действие, вероятнее всего не работает в данный момент на предприятии.';
            } else {
                return 'В систему учета была добавлена новая запись. Для просмотра данных добавленной записи необходимо перейти по ссылке ниже. Для получения информации о сотруднике, выполнившим операцию, перейдите по ссылке ниже.';
            }
        }
    }

    public function getMessageUpdate(int $log_id = null, int $user_id = null): string
    {
        if ($log_id === null) {
            if ($user_id === null) {
                return 'В системе учета была обновлена информация о пациенте. В настоящий момент она удалена, просмотр данных не возможен. Сотрудник, выполнивший данной действие, вероятнее всего не работает в данный момент на предприятии. Для просмотра внесенных изменений воспользуйтесь кнопкой "Просмотр изменений".';
            } else {
                return 'В системе учета была обновлена информация о пациенте. В настоящий момент она удалена, просмотр данных не возможен. Для получения информации о сотруднике, выполнившим операцию, перейдите по ссылке ниже. Для просмотра внесенных изменений воспользуйтесь кнопкой "Просмотр изменений".';
            }
        } else {
            if ($user_id === null) {
                return 'В системе учета была обновлена информация о пациенте. Для просмотра данных добавленной записи необходимо перейти по ссылке ниже. Сотрудник, выполнивший данной действие, вероятнее всего не работает в данный момент на предприятии. Для просмотра внесенных изменений воспользуйтесь кнопкой "Просмотр изменений".';
            } else {
                return 'В системе учета была обновлена информация о пациенте. Для просмотра данных добавленной записи необходимо перейти по ссылке ниже. Для получения информации о сотруднике, выполнившим операцию, перейдите по ссылке ниже. Для просмотра внесенных изменений воспользуйтесь кнопкой "Просмотр изменений".';
            }
        }
    }

    public function getMessageDelete(int $user_id = null): string
    {
        if ($user_id === null) {
            return 'В системе учета была удалена запись. Сотрудник, выполнивший данной действие, вероятнее всего не работает в данный момент на предприятии. Для просмотра подробной информации по удаленной записи перейтите в чат-бот телеграмм и найдите сообщение по дате и времени.';
        } else {
            return 'В системе учета была удалена запись. Для получения информации о сотруднике, выполнившим операцию, перейдите по ссылке ниже. Для просмотра подробной информации по удаленной записи перейтите в чат-бот телеграмм и найдите сообщение по дате и времени.';
        }
    }

    public function getAction(): Action
    {
        return Action::query()->where('value', '=', $this->value)->first();
    }
}
